plugins {
    id "java"
    id "war"
    id "mx.com.inftel.wildfly" version "1.0.2"
    id "com.github.node-gradle.node" version "7.0.0"
}

group "ru.bardinpetr.itmo"
version "0.3"

repositories {
    mavenCentral()
    maven { url "https://repo.gradle.org/gradle/libs-releases" }
}

ext {
    junit_ver = "5.9.1"
}

sourceCompatibility = "17"
targetCompatibility = "17"

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

dependencies {
    // JAKARTA 10 WEB
    implementation "jakarta.platform:jakarta.jakartaee-web-api:10.0.0"
    implementation "org.glassfish.web:web:10.0-b28"

    // WEB
    implementation "org.primefaces:primefaces:13.0.0:jakarta"
    implementation "org.jboss.weld.se:weld-se-core:5.1.2.Final"

    // validation
    implementation "org.hibernate.validator:hibernate-validator:7.0.5.Final"

    // JPA
    implementation "org.eclipse.persistence:org.eclipse.persistence.jpa:4.0.2"
    compileOnly "org.eclipse.persistence:eclipselink:4.0.2"

    // Logging
    implementation "org.slf4j:slf4j-api:2.0.7"
    runtimeOnly "ch.qos.logback:logback-core:1.4.7"
    runtimeOnly "ch.qos.logback:logback-classic:1.4.7"

    // JWT
    implementation "io.jsonwebtoken:jjwt-api:0.11.5"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:0.11.5"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:0.11.5"

    // Tests
    implementation "org.junit.jupiter:junit-jupiter-api:${junit_ver}"
    implementation "org.junit.jupiter:junit-jupiter-engine:${junit_ver}"
    implementation "org.junit.jupiter:junit-jupiter:${junit_ver}"
    implementation 'org.assertj:assertj-core:3.4.1'
}

wildfly {
    controller = "remote+http://localhost:59883"
    username = "admin"
    password = "1234"
    deployment = "build/libs/${rootProject.name}-${version}.war"
    persistent = false
}

node {
    nodeProjectDir.set(file("${project.projectDir}/src/main/webapp/src"))
}

tasks.named("wildflyDeploy") {
    dependsOn("build")
}

war {
    exclude("src/**")
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    dependsOn("yarn_build")
}

tasks.register("native2ascii", Native2ASCIITask) {
    inputDir = layout.buildDirectory.dir("resources")
}
