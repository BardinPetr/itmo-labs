plugins {
    id "java"
    id "war"
    id "mx.com.inftel.wildfly" version "1.0.2"
    id "io.freefair.lombok" version "8.3"
    id "com.github.node-gradle.node" version "7.0.0"
}

group "ru.bardinpetr.itmo"
version "0.2.0"

repositories {
    mavenCentral()
}

sourceCompatibility = "16"
targetCompatibility = "16"

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

dependencies {
    compileOnly "jakarta.servlet:jakarta.servlet-api:5.0.0"
    compileOnly "jakarta.mvc:jakarta.mvc-api:2.0.0"
//    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.0'
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl:3.0.1'

    implementation "io.jsonwebtoken:jjwt-api:0.11.5"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:0.11.5"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:0.11.5"

    implementation "org.slf4j:slf4j-api:2.0.7"
    runtimeOnly "ch.qos.logback:logback-core:1.4.7"
    runtimeOnly "ch.qos.logback:logback-classic:1.4.7"
}

wildfly {
    controller = "remote+http://localhost:9990"
    username = "admin"
    password = "1234"
    deployment = "build/libs/${rootProject.name}-${version}.war"
    persistent = false
}

node {
    nodeProjectDir.set(file("${project.projectDir}/src/main/webapp/src"))
}

tasks.named("build") { finalizedBy("wildflyDeploy") }

tasks.register('frontend_setup', YarnTask) {
    dependsOn("yarn_install")
}

war {
    exclude("src/**")
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    dependsOn("yarn_build")
}